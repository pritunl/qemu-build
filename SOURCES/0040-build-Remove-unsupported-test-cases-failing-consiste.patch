From 79c74009892804419dce264399f3fde357d5b1c3 Mon Sep 17 00:00:00 2001
From: Susant Palai <spalai@redhat.com>
Date: Tue, 2 Apr 2019 11:07:03 +0530
Subject: [PATCH 40/52] build: Remove unsupported test cases failing
 consistently

The following two test cases failing in downstream regression runs.
Hence removing them as they are not supported downstream.

tests/basic/cloudsync-sanity.t
tests/bugs/distribute/bug-882278.t

Label: DOWNSTREAM ONLY

Change-Id: Ie4b506639a017ec9910e44df1b721d9bfadf07b3
Signed-off-by: Susant Palai <spalai@redhat.com>
Reviewed-on: https://code.engineering.redhat.com/gerrit/166662
Reviewed-by: Sunil Kumar Heggodu Gopala Acharya <sheggodu@redhat.com>
Tested-by: Sunil Kumar Heggodu Gopala Acharya <sheggodu@redhat.com>
---
 tests/basic/cloudsync-sanity.t     | 22 ------------
 tests/bugs/distribute/bug-882278.t | 73 --------------------------------------
 2 files changed, 95 deletions(-)
 delete mode 100644 tests/basic/cloudsync-sanity.t
 delete mode 100755 tests/bugs/distribute/bug-882278.t

diff --git a/tests/basic/cloudsync-sanity.t b/tests/basic/cloudsync-sanity.t
deleted file mode 100644
index 3cf719d..0000000
--- a/tests/basic/cloudsync-sanity.t
+++ /dev/null
@@ -1,22 +0,0 @@
-#!/bin/bash
-
-. $(dirname $0)/../include.rc
-. $(dirname $0)/../volume.rc
-
-cleanup;
-
-TEST glusterd
-TEST pidof glusterd
-
-TEST $CLI volume create $V0 replica 3  $H0:$B0/${V0}{1,2,3,4,5,6,7,8,9};
-TEST $CLI volume set $V0 features.cloudsync enable;
-TEST $CLI volume start $V0;
-
-## Mount FUSE
-TEST $GFS -s $H0 --volfile-id $V0 $M1;
-
-# This test covers lookup, mkdir, mknod, symlink, link, rename,
-# create operations
-TEST $(dirname $0)/rpc-coverage.sh $M1
-
-cleanup;
diff --git a/tests/bugs/distribute/bug-882278.t b/tests/bugs/distribute/bug-882278.t
deleted file mode 100755
index 8cb5147..0000000
--- a/tests/bugs/distribute/bug-882278.t
+++ /dev/null
@@ -1,73 +0,0 @@
-#!/bin/bash
-
-. $(dirname $0)/../../include.rc
-. $(dirname $0)/../../volume.rc
-cleanup
-
-# Is there a good reason to require --fqdn elsewhere?  It's worse than useless
-# here.
-H0=$(hostname -s)
-
-function recreate {
-	# The rm is necessary so we don't get fooled by leftovers from old runs.
-	rm -rf $1 && mkdir -p $1
-}
-
-function count_lines {
-	grep "$1" $2/* | wc -l
-}
-
-TEST glusterd
-TEST pidof glusterd
-TEST $CLI volume info;
-
-## Start and create a volume
-TEST recreate ${B0}/${V0}-0
-TEST recreate ${B0}/${V0}-1
-TEST $CLI volume create $V0 $H0:$B0/${V0}-{0,1}
-TEST $CLI volume set $V0 cluster.nufa on
-
-function volinfo_field()
-{
-    local vol=$1;
-    local field=$2;
-
-    $CLI volume info $vol | grep "^$field: " | sed 's/.*: //';
-}
-
-
-## Verify volume is created
-EXPECT "$V0" volinfo_field $V0 'Volume Name';
-EXPECT 'Created' volinfo_field $V0 'Status';
-
-## Start volume and verify
-TEST $CLI volume start $V0;
-EXPECT 'Started' volinfo_field $V0 'Status';
-
-## Mount native
-special_option="--xlator-option ${V0}-dht.local-volume-name=${V0}-client-1"
-TEST glusterfs --volfile-server=$H0 --volfile-id=$V0 $special_option $M0
-
-## Create a bunch of test files.
-for i in $(seq 0 99); do
-	echo hello > $(printf $M0/file%02d $i)
-done
-
-## Make sure the files went to the right place.  There might be link files in
-## the other brick, but they won't have any contents.
-EXPECT "0" count_lines hello ${B0}/${V0}-0
-EXPECT "100" count_lines hello ${B0}/${V0}-1
-
-if [ "$EXIT_EARLY" = "1" ]; then
-	exit 0;
-fi
-
-## Finish up
-EXPECT_WITHIN $UMOUNT_TIMEOUT "Y" force_umount $M0
-TEST $CLI volume stop $V0;
-EXPECT 'Stopped' volinfo_field $V0 'Status';
-
-TEST $CLI volume delete $V0;
-TEST ! $CLI volume info $V0;
-
-cleanup;
-- 
1.8.3.1

